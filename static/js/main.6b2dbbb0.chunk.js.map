{"version":3,"sources":["reportWebVitals.js","components/Header.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","setKeyLightBrightness","setFillLightBrightness","setRimLightBrightness","initialKLB","initialFLB","initialRLB","AppBar","position","color","Toolbar","Grid","container","spacing","alignItems","item","xs","Slider","defaultValue","min","max","step","onChange","event","newValue","KeyLight","brightness","width","height","intensity","lookAt","penumbra","castShadow","FillLight","RimLight","rotation","Sphere","visible","userData","test","attach","args","transparent","roughness","metalness","GroundPlane","receiveShadow","BackDrop","App","React","useState","keyLightBrightness","fillLightBrightness","rimLightBrightness","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b2dbbb0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst Header = (props) => {\n  const {\n    setKeyLightBrightness,\n    setFillLightBrightness,\n    setRimLightBrightness,\n    initialKLB,\n    initialFLB,\n    initialRLB,\n  } = props;\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs>\n            <Slider\n              defaultValue={initialKLB}\n              min={0}\n              max={initialKLB * 2}\n              step={0.1}\n              onChange={(event, newValue) => setKeyLightBrightness(newValue)}\n            />\n          </Grid>\n          <Grid item xs>\n            <Slider\n              defaultValue={initialFLB}\n              min={0}\n              max={initialFLB * 2}\n              step={0.1}\n              onChange={(event, newValue) => setFillLightBrightness(newValue)}\n            />\n          </Grid>\n          <Grid item xs>\n            <Slider\n              defaultValue={initialRLB}\n              min={0}\n              max={initialRLB * 1.5}\n              step={0.1}\n              onChange={(event, newValue) => setRimLightBrightness(newValue)}\n            />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Canvas } from \"react-three-fiber\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Header from \"./components/Header\";\n\n// Lights\nfunction KeyLight({ brightness, color }) {\n  return (\n    <rectAreaLight\n      width={3}\n      height={3}\n      color={color}\n      intensity={brightness}\n      position={[-2, 0, 5]}\n      lookAt={[0, 0, 0]}\n      penumbra={1}\n      castShadow\n    />\n  );\n}\nfunction FillLight({ brightness, color }) {\n  return (\n    <rectAreaLight\n      width={3}\n      height={3}\n      intensity={brightness}\n      color={color}\n      position={[2, 1, 4]}\n      lookAt={[0, 0, 0]}\n      penumbra={2}\n      castShadow\n    />\n  );\n}\nfunction RimLight({ brightness, color }) {\n  return (\n    <rectAreaLight\n      width={2}\n      height={2}\n      intensity={brightness}\n      color={color}\n      position={[1, 4, -2]}\n      rotation={[0, 180, 0]}\n      castShadow\n    />\n  );\n}\n\nfunction Sphere() {\n  return (\n    <mesh visible userData={{ test: \"hello\" }} position={[0, 0, 0]} castShadow>\n      <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"white\"\n        transparent\n        roughness={0.1}\n        metalness={0.1}\n      />\n    </mesh>\n  );\n}\n\n// Geometry\nfunction GroundPlane() {\n  return (\n    <mesh receiveShadow rotation={[5, 0, 0]} position={[0, -1, 0]}>\n      <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n      <meshStandardMaterial attach=\"material\" color=\"white\" />\n    </mesh>\n  );\n}\nfunction BackDrop() {\n  return (\n    <mesh receiveShadow position={[0, -1, -5]}>\n      <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n      <meshStandardMaterial attach=\"material\" color=\"white\" />\n    </mesh>\n  );\n}\n\nfunction App() {\n  const config = { initialKLB: 5.6, initialFLB: 2.6, initialRLB: 54 };\n  const { initialKLB, initialFLB, initialRLB } = config;\n\n  const [keyLightBrightness, setKeyLightBrightness] = React.useState(\n    initialKLB\n  );\n  const [fillLightBrightness, setFillLightBrightness] = React.useState(\n    initialFLB\n  );\n  const [rimLightBrightness, setRimLightBrightness] = React.useState(\n    initialRLB\n  );\n  return (\n    <>\n      <Header\n        key={1}\n        setKeyLightBrightness={setKeyLightBrightness}\n        setFillLightBrightness={setFillLightBrightness}\n        setRimLightBrightness={setRimLightBrightness}\n        initialKLB={initialKLB}\n        initialFLB={initialFLB}\n        initialRLB={initialRLB}\n      />\n      <Canvas key={2}>\n        <Sphere />\n        <BackDrop />\n        <GroundPlane />\n        <KeyLight brightness={keyLightBrightness} color=\"#ffbdf4\" />\n        <FillLight brightness={fillLightBrightness} color=\"#bdefff\" />\n        <RimLight brightness={rimLightBrightness} color=\"#fff\" />\n      </Canvas>\n      ,\n    </>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}